
PlantUML用のドキュメント

@startuml

title 課題

class SuperMarket {
	-superMarket: SuperMarket
	-sales: int
	-stock: List<Bread>
	-superMarket() : SuperMarket
	-getinstance() : SuperMarket
	+getSales(): int
	+getStock(): String
	+order(String[]):List<Bread>
}
note left : Singleton

class WholeSaler{
	-wholeSaler: wholeSaler
	-stock: List<Bread>
	-wholeSeler()
	+getinstance(): WholeSeler
	+order(String):List<Bread>
	+delivery(List<Bread>)
}
note left : Singleton

class BreadFactory {
	-breadFactory: BreadFactory
	-stock: List<Bread>
	-BreadFactory()
	+getinstance(): BreadFactory
	-breadFactory() : BreadFactory
	+makeBread(): Bread
	+makeBreads(): List<Bread>
	+delivery()
}
note left : Singleton

interface Bread {
 -price: int
 -kind: String
 +getPrice()
 +getKind()
}

class BeanPasteBread {
	-price: int
	-kind: String
}

class PlainBread{
	-price: int
	-kind: String
}

SuperMarket --> WholeSaler : 発注
SuperMarket <-- WholeSaler : 納品

Bread <|-- BeanPasteBread: 継承
Bread <|-- PlainBread: 継承

BreadFactory --> Bread: 製造

BreadFactory --> WholeSaler: 納品
BreadFactory <-- WholeSaler: 発注

@enduml
