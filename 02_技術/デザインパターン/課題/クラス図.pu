
PlantUML用のドキュメント

@startuml

title 課題

class SuperMarket {
	-superMarket: SuperMarket
	-stock: List<Bread>
	-superMarket() : SuperMarket
	-getinstance() : SuperMarket
	+getSales(): int
	+getStock(): String
	+checkStock(List<Bread>): void
}

Class BreadOrder {
	-Enum kind
	-int orderNum
	+order(Enum,int)
	+getKind() :Enum
	+getOrderNum(): int
}

class WholeSaler{
	-wholeSaler: wholeSaler
	-stock: List<Bread>
	-wholeSeler()
	+getinstance(): WholeSeler
	+order(List<BreadOrder>):List<Bread>
}

class BreadFactory {
	-breadFactory: BreadFactory
	-stock: List<Bread>
	+getinstance(): BreadFactory
	-breadFactory() : BreadFactory
	-makeBread(String): Bread
	+makeBreads(List<BreadOrder>): List<Bread>
}

interface Bread {
 -kind: String
 +getKind()
}

class BeanPasteBread {
	-kind: String
}

class PlainBread{
	-kind: String
}

SuperMarket --> WholeSaler: 発注
SuperMarket <-- WholeSaler: 納品
SuperMarket --> BreadOrder : 作成

Bread <|-- BeanPasteBread: 実装
Bread <|-- PlainBread: 実装

BreadFactory --> Bread: 製造

BreadFactory --> WholeSaler: 納品
BreadFactory <-- WholeSaler: 発注

@enduml

